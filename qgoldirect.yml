openapi: 3.0.0
info:
  title: QGen Direct (Arritech's QGen Online API)
  version: '1.0.0'
  description: |
    This API enables Arritech clients to integrate their systems with QGen Online to access our services.
    It is written supporting the openAPI standards and all data returned is in JSON format. 
    
    Requests should be directed to the appropriate API URL 
    - Staging: https://qgenonlinestaging.com/integration-api/
    - Production: https://qgenonline.com/integration-api/
    
    All API requests must be made over HTTPS. HTTP is not supported! 
    See the authentication section for information on correctly authenticating calls 
    to the QGen Direct API.
    For any queries please contact: support@qgengroup.com
    
    # Generate API Key
    
    Login to qgenonline.com with a user that has credentials to generate API keys. In the **Settings** menu 
    you will find the **Generate API key** sub menu. Click on it and fill in the form.
    For security reasons, we recommend you specify the IP address of your client accessing our API. If left 
    empty, IP whitelisting is disabled, meaning that all IPs will have access to the API.
    
    # How to use the API explorer
    
    This page allows you to test the APIs directly without any coding. It's great to test some examples and
    make sure your keys are working and the servers are connected. Start by clicking the 
    **Try it out** button in the Login section. This will allow you to edit the body parameters with your
    clientID and secret Key as generated from QGen Online page.
    
    From the response, cut the access_token value (whatever is inside the quotations) and paste it in the 
    **value** field shown when you press the **Authorize** button shown here.
    
    You can then press the **Try it now** buttons on the other endpoints, edit the values of the fields in
    the *Body*  and press **Execute**
  
  
    
    
  termsOfService: 'https://arritech.com'
  contact:
    name: API Dev Team
    email: support@arritech.com
    url: 'https://arritech.com/contact/'
  license:
    name: Arritech Agreement
    url: 'https://arritech.com'
    


servers:
  - url: https://qgenonlinestaging.com/integration-api
    description: Staging server
  - url: https://qgenonline.com/integration-api
    description: Production server

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: |
        ## Security Scheme: JWT Bearer Token
        
        This API uses JWT (JSON Web Token) for authentication and authorization.
        
        ### Generating a Token
        
        After successful login through the `/v1/public/login` endpoint, a JWT token is returned in the response. This token must be included in the `Authorization` header for all other secure endpoints.
        
        ### Storing the Token
        
        **Important:** It's crucial to securely store the JWT token on the client-side to prevent unauthorized access. We recommend encrypting the token and storing it in a secure storage solution. 
        
        ### Transmitting the Token
        
        **All API requests must be made over HTTPS.** Tokens should never be transmitted over a non-secure connection.
        
        ### Token Expiry
        
        Tokens are short-lived and should be regenerated before expiry. The expiry time is included in the login response.
        
        ### Sample Header
        
        ```http
        Authorization: Bearer YOUR_JWT_TOKEN_HERE
        ```
tags:
  - name: authentication
  - name: aml

paths:
  /v1/public/login:
    post:
      tags:
        - authentication
      summary: login
      description: |
        You should have already generated an access key pair via QGen Online Dev tools section.
        If not, Login to QGen Online using your admin user credentials, and access the Dev tools 
        to generate an API key. You can generate multiple keys for both
        the staging or production environments. Multiple keys are uniquely
        identified by a unique key identifier called ClientID.
        This 'Login' endpoint converts your clientID/secretkey pair, if validated, into
        a JWT session token to use during your other API calls. You can call this more than one 
        time during a session to make sure it does not expire. So check the expiry time 
        provided with the token in the response and make sure to generate a new token before the time is up. 
        Parameters required:
        - clientID
        - apikey
      security: []
      requestBody:
        description: Send the clientID and respective secret API key as generated in QGenOnline
        content:
          application/json:
            schema:
              type: object
              properties:
                clientID:
                  type: string
                  description: ClientID that matches the secret key
                clientSecret:
                  type: string
                  description: Secret key
              
              example:
                clientID: 63ee439c60c4f758b44caff6
                clientSecret: h0tYq:5r6dp3.8Z,)bs>7kO24unF${}P
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: True if the token was generated successfully. False otherwise
                  data:
                    type: object
                    description: In case of an error, this object will be set to 'null'
                    properties:
                      access_token:
                        type: string
                        description: The temporary JWT token to use in all subsequent calls
                      expires: 
                        type: integer
                        format: date-time
                        description: expiry date and time of the token
                  errors:
                    type: object
                    description: Array of error object types. If the request was successful, this object will be set to 'null'
                    properties: 
                      code:
                        type: integer
                        description: The HTML error reason code. Includes 400 (bad request), 401 (Unauthorized)
                      message:
                        type: string
                        description: A descriptive message describing the reason for the error
                      type:
                        type: string
                        description: Error types such as "BAD_REQUEST_ERROR", "UNAUTHORIZED_ERROR"
              example:
                success: true
                data:
                  access_token: |
                    eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJjbGFpbXMiOlsiQ29tcGx5IiwiQU1MIl0sImNsaWVudF9pZCI6IjYzZjM4NWI2OTQwY2JmYzYx
                    ZjYxM2Q1NCIsImV4cCI6MTY3NjkxNDg2NywiaXNzIjoiUWdlbkFwaSIsIm1lcmNoYW50X2lkIjoiNWVkZTE3OTUxMTExZmMyNGQ4OWJiYTdiIiwibW
                    VyY2hhbnRfbmFtZSI6Iktub3cgTWUgTm93Iiwib3JpZ19pYXQiOjE2NzY5MDc2NjcsInVzZXJuYW1lIjoiZ29kd2luLnNjaGVt
                    YnJpQGtub3dtZW5vdy5jb20ifQ.ozzW9BCFPicR93t_zOJTwn3vaHc8-ibiQbYqZVlPi7AoUw9skC0QL6dgxkVqQGxQ2on8arR_NiaaIR8JxelcGS
                  expires: 2023-02-20T17:41:07.725270578Z
                errors: null

        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: False in case of a bad request
                  data:
                    type: object
                    description: In case of an error, this object will be set to 'null'
                  errors:
                    type: object
                    description: Array of error object types.
                    properties: 
                      code:
                        type: integer
                        description: Bad request error
                      message:
                        type: string
                        description: A descriptive message describing the reason for the error
                      type:
                        type: string
                        description: "BAD_REQUEST_ERROR"
              example:
                success: false
                data: null
                errors: 
                  code: 400
                  message: "invalid character '\\n' in string literal"
                  type: BAD_REQUEST_ERROR

        '401':
          description: Unauthorized, check your token if still valid. It may have expired.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: False in case of a bad request
                  data:
                    type: object
                    description: In case of an error, this object will be set to 'null'
                  errors:
                    type: object
                    description: Array of error object types.
                    properties: 
                      code:
                        type: integer
                        description: Bad request error
                      message:
                        type: string
                        description: A descriptive message describing the reason for the error
                      type:
                        type: string
                        description: "UNAUTHORIZED_ERROR"
              example:
                success: false
                data: null
                errors: 
                  code: 401
                  message: "invalid token secret"
                  type: UNAUTHORIZED_ERROR

  /v1/aml/search:
    post:
      tags:
        - aml
      summary: Search
      description: |
        Creates a new search by sending search terms, parameters and filters. This endpoint can be used to 
        instantly know if the entity has any potential hits. If there are no hits, the endpoint returns 'No Match' 
        and a 0 value in the totalHits. This allows you to instantly onboard a customer. If this search
        return 'potential match' plus a value which is higher than 1 in the totalHits field, you can suspend the 
        onboarding process until you review the hits on qgenonline.com using the returned ID to filter 
        the results.
      security:
        - bearerAuth: []        
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                searchTerm:
                  type: string
                  description: The name of the entity. Can be a person or a company
                filters:
                  type: object
                  properties:
                    birthYear:
                      type: integer
                      description: The year of birth of the person if known. Leave empty if the entity is a company
                    countryCodes: 
                      description: | 
                                      Results are filtered by the entity nationality or 
                                      country of residence. An array of ISO 3166-1 alpha-2 strings 
                      type: array
                      items: 
                        type: string
                    types:
                      description: |  
                                      These types are used within the search to refine 
                                      the result set. There is an extensive range of 
                                      filters available - use of the filters is entirely 
                                      optional. The example shows how the filters should 
                                      be included in your request. You must send a value
                                      from the allowed list as documented here.
                      type: array
                      items: 
                        type: string
                        enum: 
                          - sanction
                          - warning  
                          - fitness-probity
                          - pep
                          - pep-class-1
                          - pep-class-2
                          - pep-class-3
                          - pep-class-4
                          - adverse-media
                          - adverse-media-financial-crime
                          - adverse-media-violent-crime
                          - adverse-media-sexual-crime
                          - adverse-media-terrorism
                          - adverse-media-fraud
                          - adverse-media-narcotics
                          - adverse-media-general
                clientRef:
                  type: string
                  description: Your reference for easy link to your records
                  maxLength: 255
                notes:
                  type: string
                  description: |
                    Your own notes to add to this search for future reference. Max length is 1024 characters.
                fuzziness:
                  description: |
                                  Determines how closely the returned results must match 
                                  the supplied name. Overridden by exact_match parameter
                                  setting in this request
                  type: number
                  format: float
                  minimum: 0.0
                  maximum: 1.0
                tags:
                  description: |
                    An array of three custom tags labelled Tag1, Tag2 and Tag 3, Just insert whatever 
                    the value you want in that sequence to assign the first value to tag 1, the second value 
                    to tag 3 and \the third value in the list to tag 3, Any or all tags  can be left empty 
                  type: array
                  items:
                    type: string

              
              
              example:
                searchTerm: Jesse Pinkman
                filters:
                  birthYear: '1980'
                  countryCodes:
                    - US
                    - CA
                  types:
                    - sanction
                    - warning
                    - fitness-probity
                    - pep
                    - pep-class-1
                    - pep-class-2
                    - pep-class-3
                    - pep-class-4
                    - adverse-media
                    - adverse-media-financial-crime
                    - adverse-media-violent-crime
                    - adverse-media-sexual-crime
                    - adverse-media-terrorism
                    - adverse-media-fraud
                    - adverse-media-narcotics
                    - adverse-media-general
                clientRef: '1234567890'
                notes: This is an optional note for your records.
                fuzziness: 0.6
                tags:
                  - String to assign to Tag 1
                  - String to assign to Tag 2
                  - String to assign to Tag 3
      
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: True if the token was generated successfully. False otherwise
                  data:
                    type: object
                    description: In case of an error, this object will be set to 'null'
                    properties:
                      ID:
                        type: string
                        description: The unique search ID is generated automatically
                      totalHits: 
                        type: integer
                        description: total number of hits
                      matchStatus:
                        type: string
                        description: Set to "potential_match" if totalHits value is more than 0. set to "No_Match" if totalHits is 0
                  errors:
                    type: object
                    description: Array of error object types. If the request was successful, this object will be set to 'null'
                    properties: 
                      code:
                        type: integer
                        description: The HTML error reason code. Includes 400 (bad request), 401 (Unauthorized)
                      message:
                        type: string
                        description: A descriptive message describing the reason for the error
                      type:
                        type: string
                        description: Error types such as "BAD_REQUEST_ERROR", "UNAUTHORIZED_ERROR"
              example:
                success: true
                data:
                  ID: 63f39d127b2b07819d09866d
                  totalHits: 9
                  matchStatus: potential_match
                errors: null

        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Set to false if not successful
                  data:
                    type: object
                    properties:
                      ID:
                        type: string
                        description: The unique search ID is generated automatically
                      totalHits: 
                        type: integer
                        description: total number of hits
                      matchStatus:
                        type: string
                        description: Set to "potential_match" if totalHits value is more than 0. Set to "No_Match" if totalHits is 0
                  errors:
                    type: object
                    properties: 
                      code: 
                        type: integer
                        description: Http error code
                      message:
                        type: string
                        description: error message
                      type:
                        type: string
                        description: http status code

              example:
                success: false
                data: null
                errors:
                  code: 400
                  message: unknown field search term
                  type: BAD_REQUEST_ERROR
                  
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Set to false if not successful
                  data:
                    type: object
                    properties:
                      ID:
                        type: string
                        description: The unique search ID is generated automatically
                      totalHits: 
                        type: integer
                        description: total number of hits
                      matchStatus:
                        type: string
                        description: Set to "potential_match" if totalHits value is more than 0. Set to "No_Match" if totalHits is 0
                  errors:
                    type: object
                    properties: 
                      code: 
                        type: integer
                        description: Http error code
                      message:
                        type: string
                        description: error message
                      type:
                        type: string
                        description: http status code

              example:
                success: false
                data: null
                errors:
                  code: 401
                  message: unauthorized
                  type: UNAUTHORiZED
                  
  /v1/aml/search/monitor:
    post:
      tags:
        - aml
      summary: Monitor
      description: |
        Switch 'ON' or 'OFF' the monitoring on a specific search. By default, all 
        searches are automatically monitored. This means that you should run this
        endpoint to switch off a search from continuous monitoring.
      security:
        - bearerAuth: [] 
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id: 
                  type: string
                  description: The search ID returned in the ID field of the response to a Search call
                isMonitored:
                  type: boolean
                  description: Set to 'true' if you want to monitor this search. Set to 'false' if you want to stop monitoring 
              example:
                id: 63f4a0698870e271fc119fc0
                isMonitored: false 

      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: true if successful, false if unsuccessful
                  data:
                    type: string
                    description: the content of the response 
                  errors:
                    type: object
                    properties:
                      code:
                        type: integer
                      message:
                        type: string
                      type:
                        type: string
            
              example:
                success: true
                data: null
                errors: null

        '400':
          description: Invalid ID - ID does not exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: true if successful, false if unsuccessful
                  data:
                    type: string
                    description: the content of the response 
                  errors:
                    type: object
                    properties:
                      code:
                        type: integer
                      message:
                        type: string
                      type:
                        type: string
            
              example:
                success: false
                data: null
                errors:
                  code: 400
                  message: id - Value must be a valid bson object ID
                  type: BAD_REQUEST_ERROR
      
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Set to false if not successful
                  data:
                    type: object
                    properties:
                      ID:
                        type: string
                        description: The unique search ID is generated automatically
                      totalHits: 
                        type: integer
                        description: total number of hits
                      matchStatus:
                        type: string
                        description: Set to "potential_match" if totalHits value is more than 0. set to "No_Match" if totalHits is 0
                  errors:
                    type: object
                    properties: 
                      code: 
                        type: integer
                        description: Http error code
                      message:
                        type: string
                        description: error message
                      type:
                        type: string
                        description: http status code

              example:
                success: false
                data: null
                errors:
                  code: 401
                  message: unauthorized
                  type: ACCESS_DENIED

  /v1/cfm/case/init:
    post:
      tags:
        - cfm
      summary: Initiate a new case via the CFM.
      description: |
        Designed to initiate a customer onboarding session via our CFM component. Make the call from your onboarding webpage after collecting basic personal details 
        from an applicant. To make the call you will need to first get a valid caseTypeId which you can retrieve via the `/v1/cfm/case/types` endpoint. You may
        ask our applicant to select a product or service linked to the case type created in QGoL or assume it automatically based on the link the applicant used. 
        A successful request will create a new Case Summary containing the Personal Entity with the personal details you submitted. We will return the `CaseId`, the `entityId`
        and especially a URL link where the session with the requested CFM flow is hosted. 
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                caseTypeId:
                  type: string
                  description: A valid value as returned from the `/v1/cfm/case/types` endpoint. Case Types are created in QGen Online via the UI.
                  example: "654116dce5c397e29913ca08"
                referenceId:
                  type: string
                  description: A unique reference to your applicant. Make sure this was never submitted before and does not already exist in QGoL.
                  example: "testreference3"
                description:
                  type: string
                  description: Free text you can submit with the application. Will be visible in the notes field in the Case Summary.
                  example: "This is the description field"
                email:
                  type: string
                  format: email
                  description: Applicant email. We validate this and can reject a request if this is not a valid email structure. At least one of email or mobile is required.
                  example: "bobsmith@example.com"
                mobile:
                  type: string
                  pattern: '^\+[1-9]\d{1,14}$'
                  description: Applicant valid mobile number with country code.
                  example: "+35679000000"
                title:
                  type: string
                  enum: [Mr, Mrs, Ms, Dr, Miss]
                  description: The title before an applicant's name, limited to the specified prefixes.
                  example: "Mr"
                firstName:
                  type: string
                  description: Applicant's first name. Required.
                  example: "Abraham"
                lastName:
                  type: string
                  description: Applicant's last name. Required.
                  example: "Murray"
                legalName:
                  type: string
                  description: Optional field if the applicant has a legal name different from their known by names.
                  example: "Abraham Murray"
                countryCode:
                  type: string
                  description: Locality of applicant. Use ISO 3166-1 alpha-2 strings format.
                  example: "MT"
                locale:
                  type: string
                  description: Language preference of the applicant. Defaults to English if unspecified or unsupported.
                  example: "MT"
                gender:
                  type: string
                  enum: [Male, Female, Non-Binary, Prefer not to say]
                  description: Gender of the applicant.
                  example: "Male"
                dateOfBirth: 
                  type: string
                  format: date
                  description: Date of birth of applicant in YYYY-MM-DD format.
                  example: "1975-06-12"
                placeOfBirth:
                  type: string
                  description: Birthplace of the applicant.
                  example: "London"
                countryOfBirth:
                  type: string
                  description: Country of birth of the applicant, using ISO 3166-1 alpha-2 format.
                  example: "United Kingdom"
                addressLine1:
                  type: string
                  description: Primary address line for the applicant.
                  example: "House Name"
                addressLine2:
                  type: string
                  description: Secondary address line for the applicant.
                  example: "New Road"
                postCode:
                  type: string
                  description: Postal code for the applicant's address.
                  example: "SLM1024"
                country:
                  type: string
                  description: Country of the applicant, using ISO 3166-1 alpha-2 format.
                  example: "MT"
                nationality:
                  type: string
                  description: The nationality of the applicant.
              required:
                  - firstName
                  - lastName

            examples:
              InitCaseExample:
                summary: Example request to initiate a new case
                value:
                  caseTypeId: "654116dce5c397e29913ca08"
                  referenceId: "UniqueReferenceABCD01"
                  description: "This is the description field"
                  email: "test@arritech.com"
                  mobile: "+35679000000"
                  title: "Mr"
                  firstName: "Abraham"
                  lastName: "Murray"
                  legalName: ""
                  countryCode: "MT"
                  locale: "EN"
                  gender: "Male"
                  dateOfBirth: "1986-12-12"
                  placeOfBirth: ""
                  countryOfBirth: "MT"
                  addressLine1: ""
                  addressLine2: ""
                  postCode: ""
                  country: "MT"
                  nationality: "Maltese"
      
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: True if the case was created. False if there was an issue with creating the case
                  data:
                    type: object
                    description: In case of an error, this object will be returned as 'null'
                    properties:
                      caseId:
                        type: string
                        description: The unique case ID is generated automatically
                      entityId: 
                        type: integer
                        description: The unique entity ID within the case is generated automatically
                      journeyId:
                        type: string
                        description: This is the unique journeyID to the user journey used in the URL
                      sessionID:
                        type: string
                        description: the unique session id that makes the CFM url unique. This session expires as per setting in QGoL General settings
                      cfmUrl:
                        type: string
                        description: the URL with the unique session id that makes the CFM url unique. This is the URL that points to the custom journed for the user hosted on our servers                       
                  errors:
                    type: array
                    description: Array of error object types. If the request was successful, this object will be set to 'null'
                    properties: 
                      code:
                        type: integer
                        description: The HTML error reason code. Includes 400 (bad request), 401 (Unauthorized)
                      message:
                        type: string
                        description: A descriptive message describing the reason for the error
                      type:
                        type: string
                        description: Error types such as "BAD_REQUEST_ERROR", "UNAUTHORIZED_ERROR"
              example:
                success: true
                data:
                  caseId: 65c650f3e3f5bbb9c64a98ab
                  entityId: 65c650f3e3f5bbb9c64a98af
                  journeyId: 65c650f3d8ee10299bdc9b48
                  sessionId: 65c650f3c99c0f14a19cb914
                  cfmUrl: https://qgenonlinestaging.com/cfm/?session_id=65c650f3c99c0f14a19cb914
                errors: null

        '401':
          description: Unauthorized access
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: True if the case was created. False if there was an issue with creating the case
                  data:
                    type: object
                    description: In case of an error, this object will be returned as 'null'
                    properties:
                      caseId:
                        type: string
                        description: The unique case ID is generated automatically
                      entityId: 
                        type: integer
                        description: The unique entity ID within the case is generated automatically
                      journeyId:
                        type: string
                        description: This is the unique journeyID to the user journey used in the URL
                      sessionID:
                        type: string
                        description: the unique session id that makes the CFM url unique. This session expires as per setting in QGoL General settings
                      cfmUrl:
                        type: string
                        description: |
                            the URL with the unique session id that makes the CFM url unique. This is the URL that points to the custom journey 
                            for the user hosted on our servers                       
                  errors:
                    type: array
                    description: Array of error object types. If the request was successful, this object will be set to 'null'
                    items:
                      type: object
                      properties: 
                        code:
                          type: integer
                          description: The HTML error reason code. Includes 400 (bad request), 401 (Unauthorized)
                        message:
                          type: string
                          description: A descriptive message describing the reason for the error
                        type:
                          type: string
                          description: Error types such as "BAD_REQUEST_ERROR", "UNAUTHORIZED_ERROR"

                  example:
                    success: false
                      data: null
                      errors:
                        - code: 401
                          message: "UNAUTHORIZED_ERROR"
                          type: "ACCESS_DENIED"
                    
  /v1/cfm/case/types:
    get:
      tags:
        - cfm
      summary: Get the values set for Csse Types
      description: |
        These values can be created and customised within the QGoL web UI. Use one of the value returned here in the 'init Case' API call, 
        within the field caseTypeID to indicate which case type will be used for the case. The case type is linked to the journey of the user
        when following the link in the ser url
      security:
        - bearerAuth: []

      responses:
        '200':
          description: List fo case types
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates if the operation was successful.
                  data:
                    type: object
                    properties:
                      caseTypes:
                        type: array
                        description: An array of case types
                        items:
                          type: object
                          properties: 
                            id:
                              type: string
                              description: The unique identifier for the case type
                              example: "65c4dd7fe3f5bbb9c64a9779"
                            name:
                              type: string
                              description: The name of the case type
                              example: "HIgh Risk Client"
                            group:
                              type: string
                              description: The group the case type belongs to.
                              example: "CFM"
                            riskLevelId:
                              type: string
                              description: The identifier for the risk level associated with the case type.
                              example: "65c4ddacd8ee10299bdc9afa"                    